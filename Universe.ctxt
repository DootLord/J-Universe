#BlueJ class context
comment0.params=
comment0.target=Universe()
comment0.text=\r\n\ Opens\ the\ interface\ and\ gives\ the\ user\ the\ ability\ to\ select\ a\ universe\ to\ run.\r\n
comment1.params=name\ rightEdge\ bottomEdge
comment1.target=Universe(java.lang.String,\ int,\ int)
comment1.text=\r\n\ \ Create\ a\ universe\ with\ given\ name\ and\ size.\r\n\ \ \r\n\ \ To\ be\ used\ in\ testing\r\n\ \ @param\ name\ The\ name\ to\ give\ the\ universe\r\n\ \ @param\ rightEdge\ The\ maximum\ x\ coordinate\r\n\ \ @param\ bottomEdge\ The\ maximum\ y\ coordinate\r\n
comment10.params=blackHole\ absorbObject
comment10.target=void\ suckIntoHole(Space_Object,\ Space_Object)
comment10.text=\r\n\ Controls\ the\ interaction\ between\ comets\ and\ blackholes\ when\ their\ effective\ collision\ areas\ overlap.\r\n\ \r\n\ @param\ blackHole\ the\ blackhole\ Space_Object\ that\ will\ attract\ and\ destory\ absorbObject\r\n\ @param\ absorbObject\ Space_Object\ that\ will\ be\ abosrbed\ into\ black\ hole\r\n
comment11.params=spaceObjOne\ spaceObjTwo
comment11.target=boolean\ sameVelocity(Space_Object,\ Space_Object)
comment11.text=\r\n\ Used\ to\ check\ if\ two\ Space_Objects\ are\ moving\ at\ the\ same\ speed\r\n\ \r\n\ @param\ spaceObjOne\ a\ Space_Object\ that\ will\ be\ compared\ to\ spaceObjTwo\ in\ terms\ of\ speed\ \r\n\ @param\ spaceObjTwo\ a\ Space_Object\ that\ will\ be\ compared\ to\ spaceObjOne\ in\ terms\ of\ speed\ \r\n
comment12.params=
comment12.target=int\ getGround()
comment12.text=\r\n\ Return\ the\ y\ cordinate\ of\ the\ bottom\ of\ the\ universe\r\n
comment13.params=
comment13.target=int\ getRoof()
comment13.text=\r\n\ Return\ the\ y\ cordinate\ of\ the\ top\ of\ the\ universe\r\n
comment14.params=
comment14.target=int\ getRight()
comment14.text=\r\n\ Return\ the\ x\ cordinate\ of\ the\ right\ side\ of\ the\ universe\r\n
comment15.params=
comment15.target=int\ getLeft()
comment15.text=\r\n\ Return\ the\ x\ cordinate\ of\ the\ left\ side\ of\ the\ universe\r\n
comment16.params=selectedObject
comment16.target=void\ bounce(Space_Object)
comment16.text=\r\n\ Bounces\ the\ Space_Object\ off\ somthing\ by\ inverting\ it's\ velocity\r\n
comment2.params=spaceObj
comment2.target=void\ erase(Space_Object)
comment2.text=\r\n\ Erase\ an\ object\ from\ the\ view\ of\ the\ universe\r\n\ \r\n\ @param\ spaceObj\ The\ object\ to\ be\ erased\r\n
comment3.params=spaceObj
comment3.target=void\ draw(Space_Object)
comment3.text=\r\n\ Draw\ an\ object\ at\ its\ current\ position\ onto\ the\ view\ of\ the\ universe.\r\n\ \r\n\ @param\ spaceObj\ The\ object\ to\ be\ drawn\r\n
comment4.params=
comment4.target=void\ createUniverseCollision()
comment4.text=\r\n\ Demo\ for\ collision\ between\ space\ objects.\r\n
comment5.params=
comment5.target=void\ createCometTwoTest()
comment5.text=\r\n\ A\ test\ universe\ for\ testing\ the\ functionality\ of\ the\ type\ two\ comet.\r\n
comment6.params=
comment6.target=void\ createUniverseGeneral()
comment6.text=\r\n\ An\ actual\ universe,\ with\ regular\ space\ objects\ existing\ all\ at\ once.\r\n
comment7.params=objectList
comment7.target=void\ runSim(java.util.ArrayList)
comment7.text=\r\n\ starts\ the\ simulation.\r\n\ assigns\ stars\ to\ planets\ in\ the\ order\ they're\ visited\ in\ the\ ArrayList\r\n\ \r\n\ @param\ objectList\ The\ objects\ in\ a\ universe\ to\ be\ checked\ for\ collision\ and\ to\ run\ the\ move\ or\ movePlanet\ method\r\n
comment8.params=objectList
comment8.target=void\ checkCollision(java.util.ArrayList)
comment8.text=\r\n\ Used\ to\ check\ for\ collision\ between\ each\ object\ inside\ the\ universe\ and\ give\ behaviour\ to\ each\ Space_Object\ depending\ on\ their\ type\ when\ collisions\ occour.\r\n\ \r\n\ @param\ objectList\ -\ Each\ object\ in\ the\ universe\ comprised\ of\ Space_Objects\r\n
comment9.params=selectObject\ compareObject\ selectedObjectRadiusIn\ compareObjectRadiusIn
comment9.target=boolean\ compareObjectSpace(Space_Object,\ Space_Object,\ int,\ int)
comment9.text=\r\n\ Compares\ the\ position\ of\ two\ objects\ to\ check\ for\ collision.\ \ \r\n\ \r\n\ @param\ selectObject\ the\ object\ selected\ to\ be\ collided\ with\r\n\ @param\ compareObject\ the\ object\ that\ will\ be\ compared\ in\ this\ collision\r\n\ @param\ selectedObjectRadiusIn\ the\ effective\ radius\ of\ selectedObject\r\n\ @param\ compareObjectRadiusIn\ the\ effective\ radius\ of\ compareObject\r\n
numComments=17
